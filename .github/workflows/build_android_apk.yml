name: Build and sign Android APK

on:
  workflow_dispatch:
  push:
    branches: [devel]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - devel
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        lfs: true

    - name: Checkout dotcube-licenses repo
      uses: actions/checkout@v3
      with:
        repository: dotscene-gmbh/dotcube-licenses
        path: dotcube-licenses
        ssh-key: ${{ secrets.DOTCUBE_LICENSES_PRIVATE_KEY }}

    - name: Checkout dot-bash-commons repo
      uses: actions/checkout@v3
      with:
        repository: dotscene-gmbh/dot-bash-commons
        path: dot-bash-commons
        ssh-key: ${{ secrets.BASH_COMMONS_PRIVATE_KEY }}

    - name: Install apt dependencies
      run: sudo apt-get install rename jq

    - name: Envs and Github context
      run: |
        export
        echo " "
        echo "github.event.ref=${{ github.event.ref }}"
        echo "Github context:"
        jq --color-output <<< '${{ toJson(github) }}'

    - name: Set up ruby env
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.2
        bundler-cache: true
        working-directory: DroneController

    - name: Setup gradle
      working-directory: DroneController
      run: bundle exec fastlane android clean

    - name: Define version code and name
      run: |
        VERSION_CODE=$((300 + ${{ github.run_number }}))
        echo "version_code=$VERSION_CODE"
        echo "version_code=$VERSION_CODE" >> $GITHUB_ENV

        source dot-bash-commons/modules/bash-commons/src/git.sh
        VERSION_NAME=$(git_commit_description)
        echo "version_name=$VERSION_NAME"
        echo "version_name=$VERSION_NAME" >> $GITHUB_ENV

    - name: Update version code and name
      working-directory: DroneController
      run: |
        sed --regexp-extended -i 's/versionCode [0-9]+/versionCode ${{ env.version_code }}/g' app/build.gradle
        sed --regexp-extended -i 's/versionName ".*"/versionName "${{ env.version_name }}"/g' app/build.gradle

    - name: Build, assemble and sign APK
      working-directory: DroneController
      env:
        DOTCUBE_APP_KEY_PWD: ${{ secrets.DOTCUBE_APP_KEY_PWD }}
      run: |
        bundle exec fastlane android assemble
        find . -name '*.apk' | rename 's/.apk$/_${{ env.version_code }}.apk/'

    - name: Print APK artifact paths
      working-directory: DroneController
      run: find app/build/outputs/apk -name '*.apk'

    - name: Upload APKs as build artifact
      uses: actions/upload-artifact@v3
      with:
        name: APKs
        path: DroneController/app/build/outputs/apk/**/*.apk
        if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ contains( github.event.ref, 'tags' ) }}
    steps:
    - name: Download APKs from previous build artifact
      uses: actions/download-artifact@v3
      with:
        name: APKs

    - name: Deploy APKs to f-droid server (no_gps)
      run: |
        APK_PATH=$(find . -name '*no_gps*.apk')
        APK_NAME=$(basename ${APK_PATH})
        echo "Deploying ${APK_NAME}"
        curl --fail -T ${APK_PATH} -X PUT https://f-droid.dotscene.com/receiver/upload/${APK_NAME} -H 'Authorization: Bearer ${{ secrets.FDROID_UPLOAD_KEY }}'
